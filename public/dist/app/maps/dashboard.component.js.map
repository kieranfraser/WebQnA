{"version":3,"sources":["dashboard.component.ts"],"names":[],"mappings":"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","file":"dashboard.component.js","sourcesContent":["import {Component, View, Inject, forwardRef, OnInit, OnChanges} from 'angular2/core';\r\nimport {RouteConfig, ROUTER_DIRECTIVES} from 'angular2/router';\r\nimport {tokenNotExpired} from 'angular2-jwt';\r\nimport {CanActivate} from \"angular2/router\";\r\nimport {RouteParams} from \"angular2/router\";\r\nimport {Router} from \"angular2/router\";\r\nimport {CORE_DIRECTIVES, FORM_DIRECTIVES } from \"angular2/common\";\r\nimport {AppComponent} from \"./app.component\";\r\nimport {Alert, Collapse} from \"ng2-bootstrap/ng2-bootstrap\";\r\nimport {QuestionFeedComponent} from \"./question-feed.component\";\r\nimport {QuestionInputFormComponent} from \"./question-form.component\";\r\nimport {ClassInputComponent} from \"./class-input.component\";\r\nimport {HTTPService} from \"./services/http-service\";\r\nimport {Question} from \"./models/question\";\r\nimport {BUTTON_DIRECTIVES} from \"ng2-bootstrap/ng2-bootstrap\"\r\nimport {OnlineUser} from \"./models/online-user\";\r\nimport {ClassListComponent} from \"./class-list.component\";\r\nimport {LecturerAuthComponent} from \"./lecturer-auth.component\";\r\nimport {User} from \"./models/user\";\r\nimport {TagSearchComponent} from \"./form-utilities/tag-search\";\r\n\r\ndeclare var io: any;\r\n\r\n@Component({\r\n    selector: 'dashboard',\r\n    providers: [HTTPService]\r\n})\r\n\r\n@View({\r\n    templateUrl: 'views/dashboard.html',\r\n    directives: [ ROUTER_DIRECTIVES, Alert, QuestionFeedComponent,\r\n        QuestionInputFormComponent, ClassListComponent, LecturerAuthComponent,\r\n        Collapse,BUTTON_DIRECTIVES, CORE_DIRECTIVES, FORM_DIRECTIVES, TagSearchComponent ]\r\n})\r\n\r\n/**\r\n *\r\n * This means the user can only navigate to this route if they have a JWT and\r\n * it hasn't expired yet. Not too sure how to refresh this and manage the lifecycle\r\n * (could be checking if a JWT is in localStorage? must confirm)\r\n */\r\n//@CanActivate(() => tokenNotExpired())\r\n\r\n/**\r\n * This is the main class for application - the dashboard.\r\n * Here the comment feed is visible to the logged in user.\r\n * The user can post comments, answer questions, join classes etc.\r\n * TODO: Important! investigate why slow/hanging requests when two instances\r\n * TODO: of the application are open on the same machine (possibly socket.io problem)\r\n */\r\nexport class DashboardComponent implements OnInit, OnChanges {\r\n\r\n    /**\r\n     * This is the JWT for the user's authentication\r\n     */\r\n    id_token: string;\r\n    emptyFeed: boolean = true;\r\n\r\n    public classes:any[] = [];\r\n    public userQuestionIds: string[];\r\n    public selectedClass:string = '';\r\n    questions: Question[];\r\n\r\n    public isCollapsedQuestion:boolean = true;\r\n\r\n    /**\r\n     * List of online users - update using socket.io\r\n     */\r\n    socket = null;\r\n    onlineUsers: OnlineUser[] = [];\r\n\r\n    /**\r\n     * User\r\n     */\r\n    public userClasses = [];\r\n\r\n    public searchTags = [];\r\n\r\n    /**\r\n     * Update the filter for search tags\r\n     */\r\n    updateTagSearchFilter(count: number){\r\n        this.questions = [];\r\n        console.log('update tags filter');\r\n        this.getTaggedQuestions(this.searchTags, -1);\r\n    }\r\n\r\n    /**\r\n     * Get tagged questions\r\n     */\r\n    getTaggedQuestions(array, counter){\r\n        counter++;\r\n        if(counter < array.length){\r\n            this.httpService.getQuestionsForTags(array[counter]).subscribe(\r\n                data => this.populateFeedForTag(JSON.parse(JSON.stringify(data))),\r\n                error => alert(error),\r\n                () => this.getTaggedQuestions(array, counter)\r\n            );\r\n        }\r\n    }\r\n    /**\r\n     * For the constructor must inject the parent \"loginComponent\" as\r\n     * need to change parent variables which control button states (e.g.\r\n     * the login/logout button in this case)\r\n     * @param _parent\r\n     */\r\n    constructor(@Inject(forwardRef(() => AppComponent)) private _parent:AppComponent,\r\n                private httpService: HTTPService) {\r\n        console.log(\"Set user as logged in (button state)\");\r\n        _parent.setLoggedIn();\r\n        this.socket = _parent.socket;\r\n\r\n        this.socket.on('onlineUserList', function(list){\r\n            console.log('Online User List: '+ list);\r\n            this.onlineUsers = list;\r\n        }.bind(this));\r\n\r\n        var newUserOnline = new OnlineUser(JSON.parse(localStorage.getItem('profile')).name,\r\n            JSON.parse(localStorage.getItem('profile')).picture, JSON.parse(localStorage.getItem('profile')).user_id);\r\n\r\n        this.socket.emit('userLogin', newUserOnline);\r\n        console.log(\"adding self to online user list\");\r\n        this.onlineUsers.push(newUserOnline);\r\n    }\r\n\r\n    /**\r\n     * This is called in child component instead of onInit because\r\n     * it's called when this component is routed to while onInit isn't\r\n     * (onInit may only be activated when the component is created? not\r\n     * sure must come back to this.. there were issues on the angular2 forum)\r\n     * TODO: first navigation to dashboard, update the online user list\r\n     * @param next\r\n     * @param prev\r\n     */\r\n    ngOnInit() {\r\n        console.log(\"Navigated to dashboard\");\r\n        this.id_token = localStorage.getItem('id_token');\r\n\r\n        // populate the class dropdown box and load the question feed\r\n        this.getClassList();\r\n        // get all user questions\r\n        this.userQuestionIds = JSON.parse(localStorage.getItem('user')).questions;\r\n    }\r\n\r\n    ngOnChanges(){\r\n        console.log(\"onchange\");\r\n    }\r\n\r\n    classChange(value:string){\r\n        console.log(\"changed\");\r\n        console.log(value);\r\n        this.selectedClass = value['class'];\r\n        this.getQuestions();\r\n    }\r\n\r\n    getClassList(){\r\n        var classListArray = [];\r\n        this.httpService.getAllClasses().subscribe(\r\n            data => classListArray = JSON.parse(JSON.stringify(data)),\r\n            error => alert(error),\r\n            () => this.getUpdatedUser(classListArray)\r\n        );\r\n    }\r\n\r\n    getUpdatedUser(classListArray){\r\n        // Get user details (joined classes, questions asked) from database\r\n        var userid :string = JSON.parse(localStorage.getItem('profile')).user_id;\r\n        this.httpService.getUserDetails(userid).subscribe(\r\n            data => localStorage.setItem('user', JSON.stringify(data)),\r\n            error => alert(error),\r\n            () => this.populateAllClassesModal(classListArray)\r\n        );\r\n    }\r\n\r\n    populateAllClassesModal(classListArray:JSON[]){\r\n        this.classes = [];\r\n        this.userClasses = JSON.parse(localStorage.getItem('user')).lectures;\r\n        for(var item of classListArray){\r\n            var joined: boolean = true;\r\n            if(this.userClasses != null){\r\n                if(this.userClasses.indexOf(JSON.parse(JSON.stringify(item)).name) === -1){\r\n                    joined = false;\r\n                }\r\n            }\r\n            else{\r\n                joined = false;\r\n            }\r\n            this.classes.push({'class':JSON.parse(JSON.stringify(item)).name, 'joined': joined, 'tags':JSON.parse(JSON.stringify(item)).tags});\r\n        }\r\n        this.getQuestions();\r\n    }\r\n\r\n    getQuestions(){\r\n        var questionListArray = [];\r\n        this.httpService.getQuestion(this.selectedClass).subscribe(\r\n            data => questionListArray = JSON.parse(JSON.stringify(data)),\r\n            error => alert(error),\r\n            () => this.populateFeed(questionListArray)\r\n        );\r\n    }\r\n\r\n    populateFeed(questionArray: JSON[]){\r\n        this.questions = [];\r\n        for(var item of questionArray){\r\n            console.log((JSON.parse(JSON.stringify(item)).classid));\r\n            var question = new Question(\r\n                (JSON.parse(JSON.stringify(item)).classid),\r\n                (JSON.parse(JSON.stringify(item)).question),\r\n                (JSON.parse(JSON.stringify(item)).summary),\r\n                (JSON.parse(JSON.stringify(item)).choices),\r\n                (JSON.parse(JSON.stringify(item)).answers),\r\n                (JSON.parse(JSON.stringify(item)).userid),\r\n                (JSON.parse(JSON.stringify(item)).date),\r\n                (JSON.parse(JSON.stringify(item)).type),\r\n                (JSON.parse(JSON.stringify(item)).anonymous),\r\n                (JSON.parse(JSON.stringify(item)).username),\r\n                (JSON.parse(JSON.stringify(item)).picture),\r\n                (JSON.parse(JSON.stringify(item)).tags));\r\n            this.questions.push(question);\r\n        }\r\n        if(this.questions.length > 0){\r\n            this.emptyFeed = false;\r\n        }\r\n        else{\r\n            this.emptyFeed = true;\r\n        }\r\n    }\r\n\r\n    removeDuplicates(){\r\n        for(var i=0; i < this.questions.length; i++){\r\n            var question = this.questions[i];\r\n            var counter = 0;\r\n            for(var j=0; j < this.questions.length; j++){\r\n                var checkDuplicate = this.questions[j];\r\n                if(question.user === checkDuplicate.user &&\r\n                question.date === checkDuplicate.date){\r\n                    counter++;\r\n                }\r\n            }\r\n            if(counter > 1){\r\n                this.questions.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    populateFeedForTag(questionArray: JSON[]){\r\n        console.log(questionArray);\r\n        for(var item of questionArray){\r\n            console.log((JSON.parse(JSON.stringify(item)).classid));\r\n            var question = new Question(\r\n                (JSON.parse(JSON.stringify(item)).classid),\r\n                (JSON.parse(JSON.stringify(item)).question),\r\n                (JSON.parse(JSON.stringify(item)).summary),\r\n                (JSON.parse(JSON.stringify(item)).choices),\r\n                (JSON.parse(JSON.stringify(item)).answers),\r\n                (JSON.parse(JSON.stringify(item)).userid),\r\n                (JSON.parse(JSON.stringify(item)).date),\r\n                (JSON.parse(JSON.stringify(item)).type),\r\n                (JSON.parse(JSON.stringify(item)).anonymous),\r\n                (JSON.parse(JSON.stringify(item)).username),\r\n                (JSON.parse(JSON.stringify(item)).picture),\r\n                (JSON.parse(JSON.stringify(item)).tags));\r\n            this.questions.push(question);\r\n        }\r\n        if(this.questions.length > 0){\r\n            this.emptyFeed = false;\r\n            this.removeDuplicates();\r\n        }\r\n        else{\r\n            this.emptyFeed = true;\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}
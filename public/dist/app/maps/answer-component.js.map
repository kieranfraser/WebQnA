{"version":3,"sources":["answer-component.ts"],"names":[],"mappings":"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","file":"answer-component.js","sourcesContent":["/**\r\n * Created by kfraser on 29/02/2016.\r\n */\r\nimport {Component, Inject, forwardRef} from 'angular2/core';\r\nimport {QuestionFeedComponent} from \"./question-feed.component\";\r\nimport {Question} from \"./models/question\";\r\nimport {Collapse} from \"ng2-bootstrap/ng2-bootstrap\";\r\nimport {BarGraphComponent} from \"./graphs/bar-graph.component\";\r\nimport {AnswerInputFormComponent} from \"./answer-form.component\";\r\nimport {HTTPService} from \"./services/http-service\";\r\nimport {Answer} from \"./models/answer\";\r\nimport {DoughnutChartComponent} from \"./graphs/doughnut-chart.component\";\r\n\r\ndeclare var io: any;\r\n\r\n@Component({\r\n    selector: 'answer-question',\r\n    templateUrl: 'views/answer_question.html',\r\n    inputs: ['question'],\r\n    directives: [Collapse, BarGraphComponent, AnswerInputFormComponent, DoughnutChartComponent],\r\n    providers: [HTTPService]\r\n})\r\n\r\n/**\r\n * This component is a modal that appears when the user clicks on a question in the\r\n * dashboard question feed. Includes an input form for answering questions.\r\n */\r\nexport class AnswerQuestionComponent{\r\n\r\n    socket = null;\r\n\r\n    public isCollapsedAnswer:boolean = true;\r\n    public isCollapsedStats:boolean = true;\r\n\r\n    question = new Question(\"\",\"\",\"\",[],[],\"\",\"\",\"\",\"\",\"\",\"\");\r\n    /**\r\n     * 1. Get the question that was clicked.\r\n     * 2. Create wells for each answer in the question.answer array.\r\n     * 3. Create an input field for adding an answer.\r\n     * 4. On submit, add the the answer to the question.answer array and update the question.\r\n     */\r\n    constructor(@Inject(forwardRef(() => QuestionFeedComponent))private _parent: QuestionFeedComponent,\r\n                private httpService: HTTPService){\r\n\r\n        this.socket = _parent.socket;\r\n        this.socket.on('answer', function(){\r\n            console.log('Message from server: answer feed to be updated!!');\r\n            this.getUpdatedSelectedQuestion();\r\n        }.bind(this));\r\n    }\r\n\r\n    updateQuestions(){\r\n        this._parent.updateQuestions();\r\n    }\r\n\r\n    getUpdatedSelectedQuestion(){\r\n        var updatedQuestion;\r\n        var json = JSON.stringify(this.question);\r\n        this.httpService.getSelectedQuestion(json).subscribe(\r\n            data => updatedQuestion = JSON.parse(JSON.stringify(data)),\r\n            error => alert(error),\r\n            () => this.setQuestion(updatedQuestion)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * ToDo: This could be cleaned up to be more efficient.\r\n     * @param updatedQuestion\r\n     */\r\n    setQuestion(updatedQuestion){\r\n        var questionArray = [];\r\n        for(var item of updatedQuestion){\r\n            console.log((JSON.parse(JSON.stringify(item)).classid));\r\n            var question = new Question(\r\n                (JSON.parse(JSON.stringify(item)).classid),\r\n                (JSON.parse(JSON.stringify(item)).question),\r\n                (JSON.parse(JSON.stringify(item)).summary),\r\n                (JSON.parse(JSON.stringify(item)).choices),\r\n                (JSON.parse(JSON.stringify(item)).answers),\r\n                (JSON.parse(JSON.stringify(item)).userid),\r\n                (JSON.parse(JSON.stringify(item)).date),\r\n                (JSON.parse(JSON.stringify(item)).type),\r\n                (JSON.parse(JSON.stringify(item)).anonymous),\r\n                (JSON.parse(JSON.stringify(item)).username),\r\n                (JSON.parse(JSON.stringify(item)).picture));\r\n            this.question = question;\r\n        }\r\n\r\n        //this.question.answers = answers;answers;\r\n        console.log(this.question);\r\n    }\r\n}"],"sourceRoot":"/source/"}
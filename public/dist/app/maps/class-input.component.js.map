{"version":3,"sources":["class-input.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAwBA;gBAII;;;;mBAIG;gBACH,6BAAkE,OAA0B,EACxE,WAAwB;oBADsB,YAAO,GAAP,OAAO,CAAmB;oBACxE,gBAAW,GAAX,WAAW,CAAa;oBAP5C,cAAS,GAAU,EAAE,CAAC;oBAatB,SAAI,GAAa,EAAE,CAAC;gBAN2B,CAAC;gBAQhD,sCAAQ,GAAR,cAAY,CAAC;gBAEb;;;;mBAIG;gBACH,sCAAQ,GAAR;oBACI,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oBAClH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACvB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACzC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CACrC,UAAA,IAAI,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAjC,CAAiC,EACzC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,EAAZ,CAAY,EACrB,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAA1B,CAA0B,CACnC,CAAC;oBACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;oBACf,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;oBACvB,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;gBACnE,CAAC;gBAnDL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,aAAa;wBACvB,SAAS,EAAE,CAAC,0BAAW,CAAC;wBACxB,WAAW,EAAE,wBAAwB;wBACrC,UAAU,EAAE,CAAC,uCAAiB,CAAC;qBAClC,CAAC;+BAgBe,aAAM,CAAC,iBAAU,CAAC,cAAM,OAAA,yCAAkB,EAAlB,CAAkB,CAAC,CAAC;;uCAhB3D;gBA+CF,0BAAC;YAAD,CAxCA,AAwCC,IAAA;YAxCD,qDAwCC,CAAA","file":"class-input.component.js","sourcesContent":["/**\r\n * Created by kfraser on 27/02/2016.\r\n */\r\nimport {Component, View, Inject, forwardRef, OnInit} from 'angular2/core';\r\nimport {CORE_DIRECTIVES, FORM_DIRECTIVES} from 'angular2/common';\r\nimport {Alert, DROPDOWN_DIRECTIVES} from \"ng2-bootstrap/ng2-bootstrap\";\r\nimport {DashboardComponent} from \"./dashboard.component\";\r\nimport {Lecture} from \"./models/lecture\";\r\nimport {HTTPService} from \"./services/http-service\";\r\nimport {ClassListComponent} from \"./class-list.component\";\r\nimport {TagInputComponent} from \"./form-utilities/tag-input.component\";\r\n\r\n@Component({\r\n    selector: 'class-input',\r\n    providers: [HTTPService],\r\n    templateUrl: 'views/class_input.html',\r\n    directives: [TagInputComponent]\r\n})\r\n\r\n/**\r\n * The form to create a new class. TODO: User has an auth field\r\n * TODO: this is so the lecturers and students can be distinguished - only give\r\n * TODO: the lecturers the power to use this component.\r\n */\r\nexport class ClassInputComponent implements OnInit {\r\n\r\n\r\n    className:string = \"\";\r\n    /**\r\n     * Inject the dashboard to change the toggle button for viewing the\r\n     * class creation well (disappears on submission).\r\n     * @param _parent - Dashboard component\r\n     */\r\n    constructor(@Inject(forwardRef(() => ClassListComponent)) private _parent:ClassListComponent,\r\n                private httpService: HTTPService) {}\r\n\r\n    /**\r\n     * Lecture is synonymous with class\r\n     */\r\n    newClass: Lecture;\r\n    tags: string[] = [];\r\n\r\n    ngOnInit() {}\r\n\r\n    /**\r\n     * Used to create a new class - TODO: change from profile to user when user is completed\r\n     * Creator of the class is added as a participant.\r\n     * @param value - input class name\r\n     */\r\n    addClass(){\r\n        this.newClass = new Lecture(this.className, [JSON.parse(localStorage.getItem('profile')).user_id], [], this.tags);\r\n        console.log(this.tags);\r\n        var json = JSON.stringify(this.newClass);\r\n        this.httpService.addClass(json).subscribe(\r\n            data => console.log(JSON.stringify(data)),\r\n            error => alert(error),\r\n            () => console.log(\"Class added\")\r\n        );\r\n        console.log(JSON.stringify(this.newClass));\r\n        this.className = \"\";\r\n        this.tags = [];\r\n        this._parent.refresh();\r\n        this._parent.isCollapsedClass = !this._parent.isCollapsedClass;\r\n    }\r\n}"],"sourceRoot":"/source/"}